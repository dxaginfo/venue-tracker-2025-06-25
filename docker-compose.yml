version: '3.8'

services:
  # Frontend React app
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000/api
    depends_on:
      - server
    networks:
      - venue-tracker-network

  # Backend Node.js API
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/venue_tracker
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_EXPIRES_IN=24h
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - venue-tracker-network

  # PostgreSQL database
  postgres:
    image: postgis/postgis:14-3.2
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=venue_tracker
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - venue-tracker-network

  # Redis for caching
  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - venue-tracker-network

  # PgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - venue-tracker-network

networks:
  venue-tracker-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  pgadmin_data: